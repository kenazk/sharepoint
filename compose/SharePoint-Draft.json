{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "The region to deploy the resources into"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the Administrator of the new VMs and Domain"
            },
            "defaultValue": "spAdministrator"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the Administrator account of the new VMs and Domain"
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "The Prefix for the Vms"
            },
            "defaultValue": "Contoso"
        },
        "ADVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D1",
                "Standard_DS1",
                "Standard_D2",
                "Standard_DS2",
                "Standard_D3",
                "Standard_DS3",
                "Standard_D4",
                "Standard_DS4",
                "Standard_D11",
                "Standard_DS11",
                "Standard_D12",
                "Standard_DS12",
                "Standard_D13",
                "Standard_DS13",
                "Standard_D14",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "The size of the AD VMs Created"
            },
            "defaultValue": "Standard_DS1"
        },
        "SqlVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D1",
                "Standard_DS1",
                "Standard_D2",
                "Standard_DS2",
                "Standard_D3",
                "Standard_DS3",
                "Standard_D4",
                "Standard_DS4",
                "Standard_D11",
                "Standard_DS11",
                "Standard_D12",
                "Standard_DS12",
                "Standard_D13",
                "Standard_DS13",
                "Standard_D14",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "The size of the SQL VMs Created"
            },
            "defaultValue": "Standard_DS3"
        },
        "SqlWitnessVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D1",
                "Standard_DS1",
                "Standard_D2",
                "Standard_DS2",
                "Standard_D3",
                "Standard_DS3",
                "Standard_D4",
                "Standard_DS4",
                "Standard_D11",
                "Standard_DS11",
                "Standard_D12",
                "Standard_DS12",
                "Standard_D13",
                "Standard_DS13",
                "Standard_D14",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "The size of the Witness VM Created"
            },
            "defaultValue": "Standard_DS1"
        },
        "spVMSize": {
            "type": "string",
            "allowedValues": [
                "Standard_D1",
                "Standard_DS1",
                "Standard_D2",
                "Standard_DS2",
                "Standard_D3",
                "Standard_DS3",
                "Standard_D4",
                "Standard_DS4",
                "Standard_D11",
                "Standard_DS11",
                "Standard_D12",
                "Standard_DS12",
                "Standard_D13",
                "Standard_DS13",
                "Standard_D14",
                "Standard_DS14"
            ],
            "metadata": {
                "description": "The size of the SP VMs Created"
            },
            "defaultValue": "Standard_DS2"
        },
        "domainName": {
            "type": "string",
            "metadata": {
                "description": "The FQDN of the AD Domain created "
            },
            "defaultValue": "sphafarm.com"
        },
        "sqlServerServiceAccountUserName": {
            "type": "string",
            "metadata": {
                "description": "The SQL Server Service account name"
            },
            "defaultValue": "sqlservice"
        },
        "sqlServerServiceAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The SQL Server Service account password"
            }
        },
        "sharepointFarmName": {
            "type": "string",
            "metadata": {
                "Description": "The name of the Sharepoint farm"
            },
            "defaultValue": "spfarm"
        },
        "sharePointSetupUserAccountUserName": {
            "type": "string",
            "metadata": {
                "description": "The Sharepoint Setup account name"
            },
            "defaultValue": "sp_setup"
        },
        "sharePointSetupUserAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The Sharepoint Setup account password"
            }
        },
        "sharePointFarmAccountUserName": {
            "type": "string",
            "metadata": {
                "description": "The Sharepoint Farm account name"
            },
            "defaultValue": "sp_farm"
        },
        "sharePointFarmAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The Sharepoint Farm account password"
            }
        },
        "sharePointFarmPassphrasePassword": {
            "type": "securestring",
            "metadata": {
                "description": "The Sharepoint Farm Passphrase"
            }
        },
        "spSiteTemplateName": {
            "type": "string",
            "metadata": {
                "description": "The Sharepoint Content Site Template Name"
            },
            "defaultValue": "STS#0"
        },
        "spWebSubnet": {
            "type": "string",
            "metadata": {
                "description": "The address range of the SP Web subnet created in the new VNET"
            },
            "defaultValue": "10.0.2.0/24"
        },
        "spAppSubnet": {
            "type": "string",
            "metadata": {
                "description": "The address range of the SP App subnet created in the new VNET"
            },
            "defaultValue": "10.0.3.0/24"
        },
        "spWebIPRGName": {
            "type": "string",
            "defaultValue": ""
        },
        "spWebIPAddressName": {
            "type": "string"
        },
        "spWebIPNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "Description": "Indicates whether the Sharepoint farm's IP is new or existing"
            }
        },
        "spCAIPAddressName": {
            "type": "string"
        },
        "spCAIPNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "Description": "Indicates whether the Sharepoint farm's IP is new or existing"
            }
        },
        "spCARGName": {
            "type": "string",
            "defaultValue": ""
        },
        "spWEBDNSPrefix": {
            "type": "string",
            "metadata": {
                "description": "The DNS Prefix for the Public IP Address for the SharePoint Web"
            }
        },
        "spCADNSPrefix": {
            "type": "string",
            "metadata": {
                "description": "The DNS Prefix for the Public IP Address for the Central Admin site"
            }
        },
        "NewStorageAccountNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "The prefix of the new storage account created to store the VMs disks, different storage accounts will be created for AD,SQL and Sharepoint VMs"
            }
        },
        "storageAccountType": {
            "type": "string",
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Premium_LRS"
        },
        "virtualNetworkAddressRange": {
            "type": "string",
            "metadata": {
                "description": "The address range of the new VNET in CIDR format"
            },
            "defaultValue": "10.0.0.0/16"
        },
        "VmNetworkSubnet": {
            "type": "string",
            "metadata": {
                "description": "The address range of the subnet static IPs are allocated from in the new VNET"
            },
            "defaultValue": "10.0.0.0/24"
        },
        "primaryAdIpAddress": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the new AD VM"
            },
            "defaultValue": "10.0.0.4"
        },
        "secondaryIpAddress": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the new AD VM"
            },
            "defaultValue": "10.0.0.5"
        },
        "sqlSubnet": {
            "type": "string",
            "metadata": {
                "description": "The address range of the SQL subnet created in the new VNET"
            },
            "defaultValue": "10.0.1.0/24"
        },
        "sqlLBIPAddress": {
            "type": "string",
            "metadata": {
                "description": "The IP address of the new SQL ILB"
            },
            "defaultValue": "10.0.0.200"
        },
        "dnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "The DNS Prefix for the Public IP Address for the Sharepoint Web Application"
            }
        },
        "dataBaseNames": {
            "type": "array",
            "metadata": {
                "description": "An array of databases name, each database will be created and added to the availability group"
            },
            "defaultValue": [ "testdb1", "testdb2" ]
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": ""
            },
            "defaultValue": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sharepoint-server-farm-ha"
        },
        "assetLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources that the script is dependent on such as linked templates and DSC modules"
            },
            "defaultValue": "https://raw.githubusercontent.com/hongbincao/azure-quickstart-templates/MAS.Workloads/sql-server-2014-alwayson-dsc"
        }
    },
    "variables": {
        "configDatabaseName": "SP_Config",
        "administrationContentDatabaseName": "SP_AdminContent",
        "contentDatabaseName": "spfarm_Content",
        "lbSettings": {
            "rdpLBFE": "rdpLBFE",
            "spWebLBFE": "spWebLBFE",
            "spCALBFE": "spCALBFE",
            "spWebLBBE": "spWebLBBE",
            "spCALBBE": "spCALBBE",
            "spWebLB": "spWeb",
            "spCALB": "spCALB",
            "rdpLBName": "rdpLoadBalancer",
            "spWebLBName": "spWebLoadBalancer",
            "spCALBName": "spCALoadBalancer"
        },
        "subnetNames": {
            "staticSubnetName": "ADStaticSubnet",
            "sqlSubnetName": "sqlSubnet",
            "spWebSubnetName": "spWebSubnet",
            "spAppSubnetName": "spAppSubnet"
        },
        "RDPNAT": "RDP",
        "spCANAT": "spCANAT",
        "SQLAOProbe": "SQLAlwaysOnEndPointProbe",
        "spWebProbe": "spWebProbe",
        "spWebProbePort": 8088,
        "rdpIPAddressName": "rdpIP",
        "vmSettings": {
            "availabilitySets": {
                "spWebAvailabilitySetName": "spWebAvailabiltySeti18",
                "spAppAvailabilitySetName": "spAppAvailabiltySeti18"
            },
            "noOfspRoleVMs": 2,
            "vmContainerName": "vhds",
            "spwebVMName": "spsV-web-",
            "spappVMName": "spsV-app-",
            "windowsImagePublisher": "MicrosoftWindowsServer",
            "windowsImageOffer": "WindowsServer",
            "windowsImageSKU": "2012-R2-Datacenter",
            "spImagePublisher": "MicrosoftSharePoint",
            "spImageOffer": "MicrosoftSharePointServer",
            "spImageSKU": "2013",
            "rdpPort": 3389,
            "spCentralAdminPort": 80,
            "windowsDiskSize": 128,
            "spDiskSize": 128
        },
        "virtualNetworkName": "spfarmhaVNET",


        "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "staticSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').staticSubnetName)]",
        "ADTemplateURL": "[concat(parameters('assetLocation'),'/ADVmTemplate.json')]",


        "ADStorageName": "[concat(parameters('newStorageAccountNamePrefix'),'adsa')]",
        "ADVmDepoyment": "DeployAdVms",
        "ADVmDepoymentId": "[concat('Microsoft.Resources/deployments/', variables('ADVmDepoyment'))]",
        "DeployPrimaryAdTemplateURL": "[concat(parameters('assetLocation'),'/DeployPrimaryAD.json')]",
        "DeploySecondaryAdTemplateURL": "[concat(parameters('assetLocation'),'/DeploySecondaryAD.json')]",
        "DeployPrimaryAd": "DeployPrimaryAd",
        "DeployPrimaryAdId": "[concat('Microsoft.Resources/deployments/', variables('DeployPrimaryAd'))]",
        "DeploySecondaryAdName": "DeploySecondaryAdName",
        "DeploySecondaryAdNameId": "[concat('Microsoft.Resources/deployments/', variables('DeploySecondaryAdName'))]",

        "sqlSubnetName": "sqlSubnet",
        "sqlSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('sqlSubnetName'))]",
        "sqlStorageName": "[concat(parameters('newStorageAccountNamePrefix'),'sqlsa')]",
        "SqlClusterTemplateURL": "[concat(parameters('assetLocation'),'/SqlClusterVmTemplate.json')]",
        "DeploySqlClusterVms": "DeploySqlClusterVms",
        "DeploySqlClusterVmsId": "[concat('Microsoft.Resources/deployments/', variables('DeploySqlClusterVms'))]",

        "SqlWitnessTemplateURL": "[concat(parameters('assetLocation'),'/SqlWitnessVmTemplate.json')]",
        "SqlWitnessStorageName": "[concat(parameters('newStorageAccountNamePrefix'),'sqlwsa')]",
        "DeploySqlWitnessVms": "DeploySqlWitnessVms",
        "DeploySqlWitnessVmsId": "[concat('Microsoft.Resources/deployments/', variables('DeploySqlWitnessVms'))]",

        "AdVmNamePrefix": "[concat(parameters('vmNamePrefix'),'-AD-')]",
        "adPDCVMName": "[concat(variables('AdVmNamePrefix'),'0')]",
        "adBDCVMName": "[concat(variables('AdVmNamePrefix'),'1')]",
        "vnetwithDNSTemplateUri": "[concat(parameters('assetLocation'),'/vnet-with-dns-server.json')]",
        "UpdateVNetDNS1": "UpdateVNetDNS1",
        "UpdateVNetDNS1Id": "[concat('Microsoft.Resources/deployments/', variables('UpdateVNetDNS1'))]",

        "UpdateVNetDNS2": "UpdateVNetDNS2",
        "UpdateVNetDNS2Id": "[concat('Microsoft.Resources/deployments/', variables('UpdateVNetDNS2'))]",

        "UpdateSQLWNic": "UpdateSQLWNic",
        "UpdateSQLWNicId": "[concat('Microsoft.Resources/deployments/', variables('UpdateSQLWNic'))]",
        "sqlwNicName": "SqlWitnessMachine-Nic-0",
        "nicTemplateURL": "[concat(parameters('assetLocation'),'/nic.json')]",

        "UpdateSQLCNic1": "UpdateSQLCNic1",
        "UpdateSQLCNic1Id": "[concat('Microsoft.Resources/deployments/', variables('UpdateSQLCNic1'))]",
        "sqlNicName1": "SqlMachine-Nic-0",

        "UpdateSQLCNic2": "UpdateSQLCNic2",
        "UpdateSQLCNic2Id": "[concat('Microsoft.Resources/deployments/', variables('UpdateSQLCNic2'))]",
        "sqlNicName2": "SqlMachine-Nic-1",

        "DeploySqlWitnessShare": "DeploySqlWitnessShare",
        "DeploySqlWitnessShareId": "[concat('Microsoft.Resources/deployments/', variables('DeploySqlWitnessShare'))]",
        "DeploySqlWitnessShareTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlWitnessShare.json')]",
        "SQLWitnessSharePath": "[concat(parameters('dnsPrefix'),'-fsw')]",
        "SqlWitnessVmNamePrefix": "[concat(parameters('vmNamePrefix'),'-SqlW-')]",
        "sqlwVMName": "[concat(variables('SqlWitnessVmNamePrefix'),'0')]",

        "DeploySqlAlwaysOn": "DeploySqlAlwaysOn",
        "DeploySqlAlwaysOnTemplateUrl": "[concat(parameters('assetLocation'),'/DeploySqlAlwaysOn.json')]",

        "SqlClusterVmNamePrefix": "[concat(parameters('vmNamePrefix'),'-SqlC-')]",
        "sqlCVMName1": "[concat(variables('SqlClusterVmNamePrefix'),'0')]",
        "sqlCVMName2": "[concat(variables('SqlClusterVmNamePrefix'),'0')]",

        "sqlAOEPName": "[concat(parameters('dnsPrefix'),'-hadr')]", 
        "sqlAOAGName": "[concat(parameters('dnsPrefix'),'-ag')]", 
        "sqlAOListenerName":"[concat(parameters('dnsPrefix'),'ag-listener')]" 


        "spWebSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spWebSubnetName)]",
        "spAppSubnetRef": "[concat(variables('VnetID'),'/subnets/',variables('subnetNames').spAppSubnetName)]",
        "ids": {
            "rdplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').rdpLBName)]",
            "spWeblbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spWebLBName)]",
            "spCAlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('lbSettings').spCALBName)]"
        },
        "derivedIds": {
            "rdplbFEConfigID": "[concat(variables('ids').rdplbID,'/frontendIPConfigurations/',variables('lbSettings').rdpLBFE)]",
            "spWebLBFEConfigID": "[concat(variables('ids').spWeblbID,'/frontendIPConfigurations/',variables('lbSettings').spWebLBFE)]",
            "spWebProbeID": "[concat(variables('ids').spWeblbID,'/probes/',variables('spWebProbe'))]",
            "spWebBEAddressPoolID": "[concat(variables('ids').spWeblbID,'/backendAddressPools/',variables('lbSettings').spWebLBBE)]",
            "spCABEAddressPoolID": "[concat(variables('ids').spCAlbID,'/backendAddressPools/',variables('lbSettings').spCALBBE)]",
            "spCAlbFEConfigID": "[concat(variables('ids').spCAlbID,'/frontendIPConfigurations/',variables('lbSettings').spCALBFE)]",
            "spCANATRuleID": "[concat(variables('ids').spCAlbID,'/inboundNatRules/',variables('spCANAT'))]"
        },
        "subnets": [
            {
                "name": "[variables('subnetNames').staticSubnetName]",
                "properties": {
                    "addressPrefix": "[parameters('VmNetworkSubnet')]"
                }
            },
            {
                "name": "[variables('subnetNames').sqlSubnetName]",
                "properties": {
                    "addressPrefix": "[parameters('sqlSubnet')]"
                }
            },
            {
                "name": "[variables('subnetNames').spWebSubnetName]",
                "properties": {
                    "addressPrefix": "[parameters('spWebSubnet')]"
                }
            },
            {
                "name": "[variables('subnetNames').spAppSubnetName]",
                "properties": {
                    "addressPrefix": "[parameters('spAppSubnet')]"
                }
            }
        ],
        "configuration": {
            "spModulesURL": "[concat(variables('assetLocationK'),'/ConfigureSharePointServerHA.ps1.zip')]",
            "spConfigurationFunction": "ConfigureSharePointServerHA.ps1\\ConfigureSharePointServerHA",
            "spWebIPAdressSetupURL": "[concat(parameters('baseUrl'),'/publicip-',parameters('spWebIPNewOrExisting'),'.json')]",
            "spCAIPAdressSetupURL": "[concat(parameters('baseUrl'),'/publicip-',parameters('spCAIPNewOrExisting'),'.json')]"
        },
        "assetLocationK": "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/sharepoint-server-farm-ha",
        "sqlLBName": "sqlLoadBalancer"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('NewStorageAccountNamePrefix')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[parameters('location')]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressRange')]"
                    ]
                },
                "subnets": "[variables('subnets')]"
            }
        },

        {
            "name": "[variables('ADVmDepoyment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ADTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": { "value": "[parameters('location')]" },
                    "adminUsername": { "value": "[parameters('adminUsername')]" },
                    "adminPassword": { "value": "[parameters('adminPassword')]" },
                    "dnsPrefix": { "value": "[parameters('dnsPrefix')]" },
                    "storageAccount": { "value": "[variables('ADStorageName')]" },
                    "SubnetUri": { "value": "[variables('staticSubnetRef')]" },
                    "primaryAdIpAddress": { "value": "[parameters('primaryAdIpAddress')]" },
                    "secondaryIpAddress": { "value": "[parameters('secondaryIpAddress')]" },
                    "storageAccountType": { "value": "[parameters('storageAccountType')]" },
                    "VMNamePrefix": { "value": "[variables('AdVmNamePrefix')]" },
                    "VMSize": { "value": "[parameters('ADVMSize')]" }
                }
            }
        },
        {
            "name": "[variables('DeploySqlClusterVms')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('ADVmDepoymentId')]",
                "[variables('DeploySqlWitnessShareId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('SqlClusterTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": { "value": "[parameters('location')]" },
                    "adminUsername": { "value": "[parameters('adminUsername')]" },
                    "adminPassword": { "value": "[parameters('adminPassword')]" },
                    "storageAccount": { "value": "[variables('SqlStorageName')]" },
                    "NicSubnetUri": { "value": "[variables('sqlSubnetRef')]" },
                    "LBSubnetUri": { "value": "[variables('staticSubnetRef')]" },
                    "VMNamePrefix": { "value": "[variables('SqlClusterVmNamePrefix')]" },
                    "sqlLBIPAddress": { "value": "[parameters('sqlLBIPAddress')]" },
                    "VMSize": { "value": "[parameters('SqlVMSize')]" }
                }
            }
        },
        {
            "name": "[variables('DeploySqlWitnessVms')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[variables('UpdateVNetDNS1Id')]",
                "[variables('UpdateVNetDNS2Id')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('SqlWitnessTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": { "value": "[parameters('location')]" },
                    "adminUsername": { "value": "[parameters('adminUsername')]" },
                    "adminPassword": { "value": "[parameters('adminPassword')]" },
                    "storageAccount": { "value": "[variables('SqlWitnessStorageName')]" },
                    "SubnetUri": { "value": "[variables('sqlSubnetRef')]" },
                    "storageAccountType": { "value": "[parameters('storageAccountType')]" },
                    "VMNamePrefix": { "value": "[variables('SqlWitnessVmNamePrefix')]" },
                    "VMSize": { "value": "[parameters('SqlWitnessVMSize')]" }
                }
            }
        },

        {
            "name": "[variables('DeployPrimaryAd')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('ADVmDepoymentId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('DeployPrimaryAdTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "primaryADName": { "value": "[variables('adPDCVMName')]" },
                    "domainName": { "value": "[parameters('domainName')]" },
                    "location": { "value": "[parameters('location')]" },
                    "adminUsername": { "value": "[parameters('adminUsername')]" },
                    "adminPassword": { "value": "[parameters('adminPassword')]" },
                    "assetLocation": { "value": "[parameters('assetLocation')]" }
                }
            }
        },

        {
            "name": "[variables('UpdateVNetDNS1')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('DeployPrimaryAdId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetwithDNSTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": { "value": "[parameters('location')]" },
                    "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
                    "virtualNetworkAddressRange": { "value": "[parameters('virtualNetworkAddressRange')]" },
                    "subnets": { "value": "[variables('subnets')]" },
                    "dnsServerAddress": { "value": [ "[parameters('primaryAdIpAddress')]" ] }
                }
            }
        },

        {
            "name": "[variables('DeploySecondaryAdName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('UpdateVNetDNS1Id')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('DeploySecondaryAdTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "secondaryADName": { "value": "[variables('adBDCVMName')]" },
                    "domainName": { "value": "[parameters('domainName')]" },
                    "location": { "value": "[parameters('location')]" },
                    "adminUsername": { "value": "[parameters('adminUsername')]" },
                    "adminPassword": { "value": "[parameters('adminPassword')]" },
                    "assetLocation": { "value": "[parameters('assetLocation')]" }
                }
            }
        },

        {
            "name": "[variables('UpdateVNetDNS2')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('DeploySecondaryAdNameId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetwithDNSTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": { "value": "[parameters('location')]" },
                    "virtualNetworkName": { "value": "[variables('virtualNetworkName')]" },
                    "virtualNetworkAddressRange": { "value": "[parameters('virtualNetworkAddressRange')]" },
                    "subnets": { "value": "[variables('subnets')]" },
                    "dnsServerAddress": { "value": [ "[parameters('primaryAdIpAddress')]", "[parameters('secondaryIpAddress')]" ] }
                }
            }
        },

        {
            "name": "[variables('UpdateSQLWNic')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('UpdateVNetDNS1Id')]",
                "[variables('UpdateVNetDNS2Id')]",
                "[variables('DeploySqlWitnessVmsId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nicName": {
                        "value": "[variables('sqlwNicName')]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                        "id": "[variables('sqlSubnetRef')]"
                                    }
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [ "[parameters('primaryAdIpAddress')]", "[parameters('secondaryIpAddress')]" ]
                    }

                }
            }
        },
        {
            "name": "[variables('UpdateSQLCNic1')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('UpdateVNetDNS1Id')]",
                "[variables('UpdateVNetDNS2Id')]",
                "[variables('DeploySqlClusterVmsId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nicName": {
                        "value": "[variables('sqlNicName1')]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                        "id": "[variables('sqlSubnetRef')]"
                                    }
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [ "[parameters('primaryAdIpAddress')]", "[parameters('secondaryIpAddress')]" ]
                    }

                }
            }
        },
        {
            "name": "[variables('UpdateSQLCNic2')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('UpdateVNetDNS1Id')]",
                "[variables('UpdateVNetDNS2Id')]",
                "[variables('DeploySqlClusterVmsId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplateURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "nicName": {
                        "value": "[variables('sqlNicName2')]"
                    },
                    "ipConfigurations": {
                        "value": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                        "id": "[variables('sqlSubnetRef')]"
                                    }
                                }
                            }
                        ]
                    },
                    "dnsServers": {
                        "value": [ "[parameters('primaryAdIpAddress')]", "[parameters('secondaryIpAddress')]" ]
                    }

                }
            }
        },
        {
            "name": "[variables('DeploySqlWitnessShare')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('UpdateSQLWNicId')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('DeploySqlWitnessShareTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlwVMName": { "value": "[variables('sqlwVMName')]" },
                    "domainName": { "value": "[parameters('domainName')]" },
                    "location": { "value": "[parameters('location')]" },
                    "sharePath": { "value": "[concat(parameters('dnsPrefix'),'-fsw')]" },
                    "adminUsername": { "value": "[parameters('adminUsername')]" },
                    "adminPassword": { "value": "[parameters('adminPassword')]" },
                    "assetLocation": { "value": "[parameters('assetLocation')]" }
                }
            }
        },
        {
            "name": "[variables('DeploySqlAlwaysOn')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "dependsOn": [
                "[variables('UpdateSQLCNic1Id')]",
                "[variables('UpdateSQLCNic2Id')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('DeploySqlAlwaysOnTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sqlVMNamePrefix": { "value": "[variables('SqlClusterVmNamePrefix')]" },
                    "domainName": { "value": "[parameters('domainName')]" },
                    "dnsPrefix": { "value": "[parameters('dnsPrefix')]" },
                    "sharePath": { "value": "[variables('SQLWitnessSharePath')]" },
                    "sqlwVMName": { "value": "[variables('sqlwVMName')]" },
                    "sqlLBName": { "value": "[variables('sqlLBName')]" },
                    "sqlLBIPAddress": { "value": "[parameters('sqlLBIPAddress')]" },
                    "dnsServerName": { "value": "[variables('adPDCVMName')]" },
                    "dataBaseNames": { "value": "[parameters('dataBaseNames')]" },
                    "location": { "value": "[parameters('location')]" },
                    "sqlServerServiceAccountUserName": { "value": "[parameters('sqlServerServiceAccountUserName')]" },
                    "sqlServerServiceAccountPassword": { "value": "[parameters('sqlServerServiceAccountPassword')]" },
                    "adminUsername": { "value": "[parameters('adminUsername')]" },
                    "adminPassword": { "value": "[parameters('adminPassword')]" },
                    "assetLocation": { "value": "[parameters('assetLocation')]" },
                    "sqlAlwaysOnEndpointName": { "value": "[variables('sqlAOEPName')]" }, 
                    "sqlAlwaysOnAvailabilityGroupName": { "value": "[variables('sqlAOAGName')]" }, 
                    "sqlAlwaysOnAvailabilityGroupListenerName": { "value": "[variables('sqlAOListenerName')]" } 
                }
            }

        },
        {
            "name": "spWebIPSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').spWebIPAdressSetupURL]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicIPAddressName": {
                        "value": "[parameters('spWebIPAddressName')]"
                    },
                    "publicIPAddressType": {
                        "value": "dynamic"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('spWEBDNSPrefix')]"
                    },
                    "publicIpRGName": {
                        "value": "[parameters('spWebIPRGName')]"
                    }
                }
            }
        },
        {
            "name": "spCentralAdminIPSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('configuration').spCAIPAdressSetupURL]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "publicIPAddressName": {
                        "value": "[parameters('spCAIPAddressName')]"
                    },
                    "publicIPAddressType": {
                        "value": "dynamic"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('spCADNSPrefix')]"
                    },
                    "publicIpRGName": {
                        "value": "[parameters('spCARGName')]"
                    }
                }
            }
        },

        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('vmSettings').availabilitySets.spWebAvailabilitySetName]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]"
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('vmSettings').availabilitySets.spAppAvailabilitySetName]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]"
        },

        {
            "apiVersion": "2015-05-01-preview",
            "name": "[variables('lbSettings').spWebLBName]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('location')]",
            "dependsOn": [
                "spWebIPSetup",
                "[variables('ADVmDepoymentId')]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbSettings').spWebLBFE]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[reference('spWebIPSetup').outputs.resourceId.value]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbSettings').spWebLBBE]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[variables('lbSettings').spWebLB]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('derivedIds').spWebLBFEConfigID]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('derivedIds').spWebBEAddressPoolID]"
                            },
                            "probe": {
                                "id": "[variables('derivedIds').spWebProbeID]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[variables('spWebProbe')]",
                        "properties": {
                            "protocol": "http",
                            "port": "[variables('spWebProbePort')]",
                            "intervalInSeconds": "15",
                            "numberOfProbes": "5",
                            "requestPath": "/iisstart.htm"
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "2015-05-01-preview",
            "name": "[variables('lbSettings').spCALBName]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('location')]",
            "dependsOn": [
                "spCentralAdminIPSetup"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('lbSettings').spCALBFE]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[reference('spCentralAdminIPSetup').outputs.resourceId.value]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('lbSettings').spCALBBE]"

                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('spCANAT')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('derivedIds').spCAlbFEConfigID]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 80,
                            "backendPort": "[variables('vmSettings').spCentralAdminPort]",
                            "enableFloatingIP": false
                        }
                    }
                ]
            }
        },

        {
            "name": "[concat(variables('vmSettings').spwebVMName, copyindex(),'-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "apiVersion": "2015-05-01-preview",
            "copy": {
                "name": "spWebnicLoop",
                "count": "[variables('vmSettings').noOfspRoleVMs]"
            },
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[concat('Microsoft.Network/loadBalancers/',variables('lbSettings').spWebLBName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('spWebSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('derivedIds').spWebBEAddressPoolID]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('vmSettings').spappVMName,'0-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "apiVersion": "2015-05-01-preview",
            "dependsOn": [
                "[variables('virtualNetworkName')]",
                "[concat('Microsoft.Network/loadBalancers/',variables('lbSettings').spCALBName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('spAppSubnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('derivedIds').spCABEAddressPoolID]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('derivedIds').spCANATRuleID]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat(variables('vmSettings').spappVMName,'1-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "apiVersion": "2015-05-01-preview",
            "dependsOn": [
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('spAppSubnetRef')]"
                            }
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmSettings').spappVMName, copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "spAppVMLoop",
                "count": "[variables('vmSettings').noOfspRoleVMs]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('NewStorageAccountNamePrefix'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').spappVMName, copyindex(),'-nic'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.spAppAvailabilitySetName)]",
                "Microsoft.Resources/deployments/UpdateVNetDNS2"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('spVMSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.spAppAvailabilitySetName)]"
                },
                "osProfile": {
                    "computername": "[concat(variables('vmSettings').spappVMName, copyindex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "   ": {
                    "imageReference": {
                        "publisher": "[variables('vmSettings').spImagePublisher]",
                        "offer": "[variables('vmSettings').spImageOffer]",
                        "sku": "[variables('vmSettings').spImageSKU]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('NewStorageAccountNamePrefix'),'2.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/',variables('vmSettings').spappVMName, copyindex(),'-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat('http://',parameters('NewStorageAccountNamePrefix'),'2.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').spappVMName, copyindex(), '-Data-1.vhd')]"
                            },
                            "name": "[concat(variables('vmSettings').spappVMName, copyindex(),'-data-disk1')]",
                            "caching": "None",
                            "createOption": "empty",
                            "diskSizeGB": "[variables('vmSettings').spDiskSize]",
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').spappVMName, copyindex(),'-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmSettings').spappVMName,'0/ConfigureSPAppServer')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'0')]",
                "[concat('Microsoft.Resources/deployments/', variables('DeploySqlAlwaysOn'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell.Test",
                "type": "DSC",
                "typeHandlerVersion": "2.2",
                "settings": {
                    "modulesURL": "[variables('configuration').spModulesURL]",
                    "configurationFunction": "[variables('configuration').spConfigurationFunction]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "privateSettingsRef:adminPassword"
                        },
                        "sharePointSetupUserAccountcreds": {
                            "userName": "[parameters('sharePointSetupUserAccountUserName')]",
                            "password": "privateSettingsRef:sharePointSetupUserAccountPassword"
                        },
                        "sharePointFarmAccountcreds": {
                            "userName": "[parameters('sharePointFarmAccountUserName')]",
                            "password": "privateSettingsRef:sharePointFarmAccountPassword"
                        },
                        "sharePointFarmPassphrasecreds": {
                            "userName": "ignore",
                            "password": "privateSettingsRef:sharePointFarmPassphrasePassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServerServiceAccountUserName')]",
                            "password": "privateSettingsRef:sqlServerServiceAccountPassword"
                        },
                        "databaseName": "[variables('configDatabaseName')]",
                        "sqlAlwaysOnAvailabilityGroupName": "[variables('sqlAOAGName')]",
                        "primaryReplica": "[concat(variables('SqlClusterVmNamePrefix'),'1')]",
                        "secondaryReplica": "[concat(variables('SqlClusterVmNamePrefix'),'0')]",
                        "databaseNames": [ "[variables('administrationContentDatabaseName')]", "[variables('configDatabaseName')]" ],
                        "administrationContentDatabaseName": "[variables('administrationContentDatabaseName')]",
                        "databaseServer": "[concat(variables('vmSettings').sqlVMName,'1.',parameters('domainName'))]",
                        "configuration": "[concat('{\"roles\":[{\"type\":\"application\",\"properties\":{\"fqdn\":\"',reference('spCentralAdminIPSetup').outputs.fqdn.value,'\",\"port\":',variables('vmSettings').spCentralAdminPort,'}}],\"configureForHa\":\"True\",\"loadBalancedSetProbePort\":',variables('spWebProbePort'),'}')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
                        "sharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
                        "sharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmSettings').spappVMName,'1/ConfigureSPAppServer')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'1')]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'0/extensions/ConfigureSPAppServer')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell.Test",
                "type": "DSC",
                "typeHandlerVersion": "2.2",
                "settings": {
                    "modulesURL": "[variables('configuration').spModulesURL]",
                    "configurationFunction": "[variables('configuration').spConfigurationFunction]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "privateSettingsRef:adminPassword"
                        },
                        "sharePointSetupUserAccountcreds": {
                            "userName": "[parameters('sharePointSetupUserAccountUserName')]",
                            "password": "privateSettingsRef:sharePointSetupUserAccountPassword"
                        },
                        "sharePointFarmAccountcreds": {
                            "userName": "[parameters('sharePointFarmAccountUserName')]",
                            "password": "privateSettingsRef:sharePointFarmAccountPassword"
                        },
                        "sharePointFarmPassphrasecreds": {
                            "userName": "ignore",
                            "password": "privateSettingsRef:sharePointFarmPassphrasePassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServerServiceAccountUserName')]",
                            "password": "privateSettingsRef:sqlServerServiceAccountPassword"
                        },
                        "databaseName": "[variables('configDatabaseName')]",
                        "administrationContentDatabaseName": "[variables('administrationContentDatabaseName')]",
                        "databaseServer": "[concat(variables('vmSettings').sqlVMName,'1.',parameters('domainName'))]",
                        "sqlAlwaysOnAvailabilityGroupName": "[variables('sqlAOAGName')]",
                        "primaryReplica": "[concat(variables('SqlClusterVmNamePrefix'),'1')]",
                        "secondaryReplica": "[concat(variables('SqlClusterVmNamePrefix'),'0')]",
                        "databaseNames": null,
                        "configuration": "[concat('{\"roles\":[{\"type\":\"application\",\"properties\":{\"fqdn\":\"',reference('spCentralAdminIPSetup').outputs.fqdn.value,'\",\"port\":',variables('vmSettings').spCentralAdminPort,'}}],\"configureForHa\":\"True\",\"loadBalancedSetProbePort\":',variables('spWebProbePort'),'}')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
                        "sharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
                        "sharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-05-01-preview",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmSettings').spwebVMName, copyindex())]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "spWebVMLoop",
                "count": "[variables('vmSettings').noOfspRoleVMs]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',parameters('NewStorageAccountNamePrefix'))]",
                "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').spwebVMName, copyindex(),'-nic'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.spWebAvailabilitySetName)]",
                "Microsoft.Resources/deployments/UpdateVNetDNS2"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('spVMSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('vmSettings').availabilitySets.spWebAvailabilitySetName)]"
                },
                "osProfile": {
                    "computername": "[concat(variables('vmSettings').spwebVMName, copyindex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmSettings').spImagePublisher]",
                        "offer": "[variables('vmSettings').spImageOffer]",
                        "sku": "[variables('vmSettings').spImageSKU]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',parameters('NewStorageAccountNamePrefix'),'2.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/',variables('vmSettings').spwebVMName, copyindex(),'-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "vhd": {
                                "uri": "[concat('http://',parameters('NewStorageAccountNamePrefix'),'2.blob.core.windows.net/',variables('vmSettings').vmContainerName,'/', variables('vmSettings').spwebVMName, copyindex(), '-Data-1.vhd')]"
                            },
                            "name": "[concat(variables('vmSettings').spwebVMName, copyindex(),'-data-disk1')]",
                            "caching": "None",
                            "createOption": "empty",
                            "diskSizeGB": "[variables('vmSettings').spDiskSize]",
                            "lun": 0
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmSettings').spwebVMName, copyindex(),'-nic'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmSettings').spwebVMName,'0/ConfigureSPWebServer')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spwebVMName,'0')]",
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spappVMName,'1/extensions/ConfigureSPAppServer')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell.Test",
                "type": "DSC",
                "typeHandlerVersion": "2.2",
                "settings": {
                    "modulesURL": "[variables('configuration').spModulesURL]",
                    "configurationFunction": "[variables('configuration').spConfigurationFunction]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "privateSettingsRef:adminPassword"
                        },
                        "sharePointSetupUserAccountcreds": {
                            "userName": "[parameters('sharePointSetupUserAccountUserName')]",
                            "password": "privateSettingsRef:sharePointSetupUserAccountPassword"
                        },
                        "sharePointFarmAccountcreds": {
                            "userName": "[parameters('sharePointFarmAccountUserName')]",
                            "password": "privateSettingsRef:sharePointFarmAccountPassword"
                        },
                        "sharePointFarmPassphrasecreds": {
                            "userName": "ignore",
                            "password": "privateSettingsRef:sharePointFarmPassphrasePassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServerServiceAccountUserName')]",
                            "password": "privateSettingsRef:sqlServerServiceAccountPassword"
                        },
                        "databaseName": "[variables('configDatabaseName')]",
                        "administrationContentDatabaseName": "[variables('administrationContentDatabaseName')]",
                        "sqlAlwaysOnAvailabilityGroupName": "[variables('sqlAOAGName')]",
                        "primaryReplica": "[concat(variables('SqlClusterVmNamePrefix'),'1')]",
                        "secondaryReplica": "[concat(variables('SqlClusterVmNamePrefix'),'0')]",
                        "databaseNames": "[variables('contentDatabaseName')]",
                        "databaseServer": "[concat(variables('vmSettings').sqlVMName,'1.',parameters('domainName'))]",
                        "configuration": "[concat('{\"roles\":[{\"type\":\"web\",\"properties\":{\"webApp\":{\"name\":\"spARM\",\"applicationPool\":\"spARM AppPool\",\"applicationPoolAccount\":\"', parameters('sharePointFarmAccountUserName'),'\",\"url\":\"http://',reference('spWebIPSetup').outputs.fqdn.value,'\",\"port\":80,\"hostHeader\":\"',reference('spWebIPSetup').outputs.fqdn.value,'\",\"databaseName\":\"',variables('contentDatabaseName'),'\"},\"site\":{\"name\":\"spARM\",\"template\":\"',parameters('spSiteTemplateName'),'\",\"url\":\"http://',reference('spWebIPSetup').outputs.fqdn.value,'\",\"ownerAliasDomain\":\"',parameters('domainName'),'\",\"ownerAliasUserName\":\"',parameters('sharePointFarmAccountUserName'),'\",\"secondaryOwnerAliasDomain\":\"',parameters('domainName'),'\",\"secondaryOwnerAliasUserName\":\"',parameters('adminUserName'),'\"}}}],\"configureForHa\":\"True\",\"loadBalancedSetProbePort\":',variables('spWebProbePort'),'}')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
                        "sharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
                        "sharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vmSettings').spwebVMName,'1/ConfigureSPWebServer')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vmSettings').spwebVMName,'1')]",
                "[concat('Microsoft.Compute/virtualMachines/',variables('vmSettings').spwebVMName,'0/extensions/ConfigureSPWebServer')]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell.Test",
                "type": "DSC",
                "typeHandlerVersion": "2.2",
                "settings": {
                    "modulesURL": "[variables('configuration').spModulesURL]",
                    "configurationFunction": "[variables('configuration').spConfigurationFunction]",
                    "properties": {
                        "domainName": "[parameters('domainName')]",
                        "adminCreds": {
                            "userName": "[parameters('adminUserName')]",
                            "password": "privateSettingsRef:adminPassword"
                        },
                        "sharePointSetupUserAccountcreds": {
                            "userName": "[parameters('sharePointSetupUserAccountUserName')]",
                            "password": "privateSettingsRef:sharePointSetupUserAccountPassword"
                        },
                        "sharePointFarmAccountcreds": {
                            "userName": "[parameters('sharePointFarmAccountUserName')]",
                            "password": "privateSettingsRef:sharePointFarmAccountPassword"
                        },
                        "sharePointFarmPassphrasecreds": {
                            "userName": "ignore",
                            "password": "privateSettingsRef:sharePointFarmPassphrasePassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('sqlServerServiceAccountUserName')]",
                            "password": "privateSettingsRef:sqlServerServiceAccountPassword"
                        },
                        "databaseName": "[variables('configDatabaseName')]",
                        "administrationContentDatabaseName": "[variables('administrationContentDatabaseName')]",
                        "sqlAlwaysOnAvailabilityGroupName": "[variables('sqlAOAGName')]",
                        "primaryReplica": "[concat(variables('SqlClusterVmNamePrefix'),'1')]",
                        "secondaryReplica": "[concat(variables('SqlClusterVmNamePrefix'),'0')]",
                        "databaseNames": null,
                        "databaseServer": "[concat(variables('vmSettings').sqlVMName,'1.',parameters('domainName'))]",
                        "configuration": "[concat('{\"roles\":[{\"type\":\"web\",\"properties\":{\"webApp\":{\"name\":\"spARM\",\"applicationPool\":\"spARM AppPool\",\"applicationPoolAccount\":\"', parameters('sharePointFarmAccountUserName'),'\",\"url\":\"http://',reference('spWebIPSetup').outputs.fqdn.value,'\",\"port\":80,\"hostHeader\":\"',reference('spWebIPSetup').outputs.fqdn.value,'\",\"databaseName\":\"',variables('contentDatabaseName'),'\"},\"site\":{\"name\":\"spARM\",\"template\":\"',parameters('spSiteTemplateName'),'\",\"url\":\"http://',reference('spWebIPSetup').outputs.fqdn.value,'\",\"ownerAliasDomain\":\"',parameters('domainName'),'\",\"ownerAliasUserName\":\"',parameters('sharePointFarmAccountUserName'),'\",\"secondaryOwnerAliasDomain\":\"',parameters('domainName'),'\",\"secondaryOwnerAliasUserName\":\"',parameters('adminUserName'),'\"}}}],\"configureForHa\":\"True\",\"loadBalancedSetProbePort\":',variables('spWebProbePort'),'}')]"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('adminPassword')]",
                        "sharePointSetupUserAccountPassword": "[parameters('sharePointSetupUserAccountPassword')]",
                        "sharePointFarmAccountPassword": "[parameters('sharePointFarmAccountPassword')]",
                        "sharePointFarmPassphrasePassword": "[parameters('sharePointFarmPassphrasePassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('sqlServerServiceAccountPassword')]"
                    }
                }
            }
        }
    ]
}
